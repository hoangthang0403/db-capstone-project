<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20232.23.0805.0415                               -->
<workbook original-version='18.1' source-build='2023.2.1 (20232.23.0805.0415)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Orders (9GScrAa0RCarDNRf-oUe0g_452298fa013a423f82d683d99d8386e1_Worksheet (1))' inline='true' name='federated.0273vjy077wwfe1aduopb1trq1ys' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='9GScrAa0RCarDNRf-oUe0g_452298fa013a423f82d683d99d8386e1_Worksheet (1)' name='excel-direct.0r9jauf0j241hl1e42qpr0mst76p'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/hoang/Downloads/9GScrAa0RCarDNRf-oUe0g_452298fa013a423f82d683d99d8386e1_Worksheet (1).xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0r9jauf0j241hl1e42qpr0mst76p' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:X10001:no:A1:X10001:0' header='yes' outcome='6'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' date-parse-format='dd-MM-yyyy' name='Order Date' ordinal='2' />
            <column datatype='string' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='City' ordinal='8' />
            <column datatype='string' name='State' ordinal='9' />
            <column datatype='string' name='Country' ordinal='10' />
            <column datatype='integer' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Market' ordinal='12' />
            <column datatype='string' name='Region' ordinal='13' />
            <column datatype='string' name='Product ID' ordinal='14' />
            <column datatype='string' name='Category' ordinal='15' />
            <column datatype='string' name='Sub-Category' ordinal='16' />
            <column datatype='string' name='Product Name' ordinal='17' />
            <column datatype='real' name='Sales' ordinal='18' />
            <column datatype='integer' name='Quantity' ordinal='19' />
            <column datatype='real' name='Discount' ordinal='20' />
            <column datatype='real' name='Profit' ordinal='21' />
            <column datatype='real' name='Shipping Cost' ordinal='22' />
            <column datatype='string' name='Order Priority' ordinal='23' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0r9jauf0j241hl1e42qpr0mst76p' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:X10001:no:A1:X10001:0' header='yes' outcome='6'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' date-parse-format='dd-MM-yyyy' name='Order Date' ordinal='2' />
            <column datatype='string' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='City' ordinal='8' />
            <column datatype='string' name='State' ordinal='9' />
            <column datatype='string' name='Country' ordinal='10' />
            <column datatype='integer' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Market' ordinal='12' />
            <column datatype='string' name='Region' ordinal='13' />
            <column datatype='string' name='Product ID' ordinal='14' />
            <column datatype='string' name='Category' ordinal='15' />
            <column datatype='string' name='Sub-Category' ordinal='16' />
            <column datatype='string' name='Product Name' ordinal='17' />
            <column datatype='real' name='Sales' ordinal='18' />
            <column datatype='integer' name='Quantity' ordinal='19' />
            <column datatype='real' name='Discount' ordinal='20' />
            <column datatype='real' name='Profit' ordinal='21' />
            <column datatype='real' name='Shipping Cost' ordinal='22' />
            <column datatype='string' name='Order Priority' ordinal='23' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:X10001:no:A1:X10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Market</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Market]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Market</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Shipping Cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Shipping Cost]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Shipping Cost</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Priority</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order Priority]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Priority</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_E7311EAEDDDA4BD2B93A623207105EB8]' role='measure' type='quantitative' />
      <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      <group caption='Action (Country,State)' hidden='true' name='[Action (Country,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country]' />
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:State:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Al Basrah&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Analamanga&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Arica y Parinacota&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Azuay&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Basel-Stadt&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Biobio&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Budapest&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Carinthia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chiba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Copperbelt&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Estuaire&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guangxi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hedmark&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hunan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kaliningrad&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kherson&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;La Libertad&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ljubljana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Makkah&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Marrakech-Tensift-El Haouz&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Meta&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mpumalanga&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Negeri Sembilan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;North Rhine-Westphalia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Phnom Penh&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Puducherry&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rhône-Alpes&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Salzburg&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Selangor&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sistan Va Baluchestan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Suceava&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tamil Nadu&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tlemcen&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Uusimaa&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Voronezh&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Yaroslavl&apos;&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;&apos;Amman&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aquitaine&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Asyut&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Banaadir&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bengkulu&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Brandenburg&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Camagüey&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chaguanas&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cluj&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Diana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Emilia-Romagna&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fujian&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Granma&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hamadan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hordaland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jambi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jizzakh&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Katanga&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kirovohrad&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Liège&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lucerne&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Maputo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Maysan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nampula&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ningxia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nyanza&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pará&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Poitou-Charentes&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Quindío&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sabah&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sarawak&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sibiu&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;South Kivu&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sylhet&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ternopil&apos;&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ulaanbaatar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Vienna&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Western Cape&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Zhytomyr&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ad Dawhah&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Alsace&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Arauca&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Atlantique&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bani Suwayf&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bern&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;British Columbia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cantabria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cherkasy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Colima&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Esfahan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Galicia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guanajuato&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Haut-Sassandra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Huambo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Isla de la Juventud&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kafr Ash Shaykh&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kerman&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kumanovo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Limousin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Madrid&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Marche&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Medea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Montana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Morelos&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Navarra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Odisha&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Paysandú&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Prague&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rajshahi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saint Michael&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saxony&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sikasso&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;St. Gallen&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tadla-Azilal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tianjin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Usti nad Labem&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vitsyebsk&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Zaporizhzhya&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Al Iskandariyah&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Anhui&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Arusha&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Baghdad&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bavaria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bitola&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burgundy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Catalonia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chisinau&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dagestan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Donga&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Federation of Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Giurgiu&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guerrero&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hidalgo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jakarta&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jawa Tengah&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kankan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Khulna&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lagunes&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lorraine&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Maseru&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mie&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mures&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Norte de Santander&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Northern Territory&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Orientale&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Piedmont&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Qazvin&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rio Grande do Sul&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;San Salvador&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Shaanxi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sofiya-Grad&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sulawesi Tengah&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tarapacá&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tolima&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Wales&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Yucatán&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Al Buhayrah&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Andalusía&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Atacama&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Babil&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bashkortostan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bishkek&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bujumbura-Mairie&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Casanare&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chihuahua&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Corsica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dnipropetrovs&apos;k&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Extreme-Nord&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gezira&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guayas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Heilongjiang&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hunedoara&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kaluga&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Khmel&apos;nyts&apos;kyy&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;La Paz&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lodz&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malanje&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;México&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mtwara&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nord&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;North-West&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Piauí&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Puebla&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;San Cristóbal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Semnan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Skikda&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sud&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tanga&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tocantins&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Valcea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Vrancea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Yazd&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Adamaoua&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Amapá&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Arbil&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Atsimo-Andrefana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Banská Bystrica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bie&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Brittany&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Canterbury&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chernihiv&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Distrito Federal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Espírito Santo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gansu&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guangdong&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Haute-Matsiatra&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hubei&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ivano-Frankivsk&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kagawa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kermanshah&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kwazulu-natal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Limpopo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Magallanes y Antártica Chilena&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Maritime&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mehedinti&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Morogoro&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nayarit&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Oita&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pazardzhik&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Prahova&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Razavi Khorasan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint-Louis&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saxony-Anhalt&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Silesia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Stara Zagora&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Taipei City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Timis&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Valparaíso&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vladimir&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Xinjiang Uygur&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Al Qadisiyah&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Aomori&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Asunción&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Balti&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bekes&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Boyacá&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Caldas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cesar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ciego de Ávila&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dhaka&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Eastern Cape&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Friuli-Venezia Giulia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Grand Casablanca&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hainaut&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Homyel&apos;&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Inhambane&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jilin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kasai-Oriental&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kindia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Liaoning&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lublin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Manitoba&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Matruh&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Namangan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Niassa&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nuevo León&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ouémé&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Podgorica&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Querétaro&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Roraima&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Santiago de Cuba&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Shkodër&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Suhaj&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sumy&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tel Aviv&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tuscany&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vest-Agder&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Western&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;&apos;Asir&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Alberta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ar Raqqah&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bandundu&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Benguela&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Brasov&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Campania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chandigarh&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Coahuila&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Diffa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;England&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Fukui&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Greater Accra&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hamburg&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hormozgan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Irbid&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jubbada Hoose&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kayes&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Korçë&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Liguria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Luhans&apos;k&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mara&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mazandaran&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Montserrado&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Namur&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nzérékoré&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Paraíba&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Poltava&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Quintana Roo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saga&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saskatchewan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sichuan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Southern&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tabasco&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tete&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Umbria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Villa Clara&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;White Nile&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ziguinchor&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Al Minufiyah&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Antofagasta&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Astrakhan&apos;&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Balearic Islands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Beirut&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Borgou&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cabo Delgado&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Centrale&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chuquisaca&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dix-Huit Montagnes&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;East Flanders&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Franche-Comté&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Grad Zagreb&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Haifa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hokkaido&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Imereti&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jiangsu&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Karnataka&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kigoma&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;León&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lower Normandy&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Maniema&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Matanzas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nagasaki&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Niamey&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Novgorod&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Osjecko-Baranjska&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Plovdiv&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Quebec&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rogaland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Santander&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Shinyanga&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;South Australia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sumatera Selatan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tbilisi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tripura&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Veracruz&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;West Flanders&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Aichi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Amazonas&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ardabil&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Atsinanana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Barahona&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bihar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brussels&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Caquetá&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chhattisgarh&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Constanta&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Diyala&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Est&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gauteng&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hawke&apos;s Bay&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Huehuetenango&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ivanovo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kalimantan Barat&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kharkiv&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kymenlaakso&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Litoral&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Maharashtra&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Markazi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Meknès-Tafilalet&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Moscow&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Neamt&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Okayama&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Perak&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Primorsko-Goranska&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Red Sea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saitama&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Schleswig-Holstein&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sinaloa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Stavropol&apos;&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tamaulipas&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tipaza&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Uttar Pradesh&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vlorë&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;West Virginia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Yamaguchi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Al Jawf&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Annaba&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ash Sharqiyah&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Baja California&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bay of Plenty&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Boeny&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bushehr&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Central&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chittagong&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dakar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Doukkala-Abda&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fès-Boulemane&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Goiás&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guizhou&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hims&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ilam&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jawa Timur&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Khomas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Khuzestan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Languedoc-Roussillon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Los Lagos&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Masovia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mono&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mwanza&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;New South Wales&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Northland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Oruro&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pinar del Río&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Qina&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Risaralda&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sancti Spíritus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Shandong&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sonora&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sulawesi Tenggara&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tartumaa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tottori&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Varna&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Yunnan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Al Madinah&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Anseba&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ashanti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Baja California Sur&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bechar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bogota&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Buskerud&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Central Equatoria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chocó&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dar Es Salaam&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Durango&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Finland Proper&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Golestan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gujarat&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hirat&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ile-de-France&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jerusalem&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kara&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kiên Giang&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Las Tunas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Los Rios&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mandoul&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Misratah&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mykolayiv&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;North Lebanon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nouakchott&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Osaka&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Plateaux&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Qinghai&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rivera&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Santa Ana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Shanghai&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sonsonate&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sulawesi Utara&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tasmania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Trengganu&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vaud&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Zacatecas&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Al Minya&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Antwerp&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Asturias&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bali&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bejaia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Botosani&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Calabria&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Centre&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cidade De Maputo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Delhi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Eastern&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Free State&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Granada&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hainan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Holguín&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jalisco&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jiangxi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kasai-Occidental&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kilimanjaro&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lesser Poland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Luanda&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Maine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Manipur&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mato Grosso do Sul&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nairobi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Niari&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Novosibirsk&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Oslo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Plzen&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Queensland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rondônia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Santiago&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Shizuoka&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sud-Ouest&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sumatera Utara&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tehran&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tunis&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Wellington&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zambezia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Al Qahirah&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Apulia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Aswan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bamako&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belgorod&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Braila&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Campeche&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ceuta&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cienfuegos&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dhi Qar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Elbasan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fromager&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Grand Gedeh&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hajdu-Bihar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Inner Mongolia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jizan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kassala&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kinshasa&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Liberec&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lubusz&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Manzini&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mayabeque&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Namibe&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ninawa&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nusa Tenggara Timur&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pahang&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Podlaskie&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Quezaltenango&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saarland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;São Paulo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Shumen&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Dakota&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Khorasan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Surxondaryo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Telangana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tyrol&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Victoria&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Western Australia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Zhejiang&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Al Fayyum&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Andhra Pradesh&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Arkhangel&apos;sk&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bacau&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Basque Country&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bissau&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bur Sa&apos;id&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Castile and León&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Chimaltenango&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cundinamarca&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dolj&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fars&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gharb-Chrarda-Béni Hssen&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guelma&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Henan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hyogo&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jammu and Kashmir&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kanagawa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lacs&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lorestan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Maluku&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Matagalpa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Monagas&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Muharraq&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nord-Ouest&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Northern&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Opole&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Picardy&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pwani&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rift Valley&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;San Fernando&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sergipe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sliven&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tanger-Tétouan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tochigi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Valenciana&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Vratsa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Yevrey&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Al Bahr Al Ahmar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Amur&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Arges&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Auvergne&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bas-Congo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bihor&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bryansk&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Caras-Severin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chiapas&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Constantine&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Djelfa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Estelí&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Geneva&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guantánamo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hebei&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Huila&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kalimantan Timur&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Khartoum&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;L&apos;viv&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Littoral&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Manawatu-Wanganui&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Marlborough&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Melilla&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mostaganem&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nitra&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Olomouc&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pernik&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Provence-Alpes-Côte d&apos;Azur&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rhineland-Palatinate&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Salah Ad Din&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Scotland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Styria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tambov&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tizi Ouzou&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Uttarakhand&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Volyn&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Yambol&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Abruzzi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Alger&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ar Riyad&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Atakora&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Banghazi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Beni&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bremen&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chaouia-Ouardigha&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Coast&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dire Dawa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Equateur&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fukuoka&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greater Poland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Harjumaa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hradec Kralove&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Irkutsk&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kabardino-Balkariya&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Khorezm&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kordestan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lima&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lusaka&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maradi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mbeya&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mopti&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nangarhar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;O&apos;Higgins&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Parana&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pomerania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rabat-Salé-Zemmour-Zaer&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saida&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Satu Mare&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sicily&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Southland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tabora&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Thies&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Upper Austria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Vinnytsya&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Zanjan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Zinder&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Al Marqab&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Antioquia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Assam&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Baki&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Beijing&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bolívar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Buzau&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Central Luzon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chongqing&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dayr Az Zawr&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Durrës&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Flemish Brabant&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gorj&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gyor&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hiroshima&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;ilina&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jharkhand&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Karbala&apos;&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kigali&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lazio&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Managua&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Manica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Montevideo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nagano&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Newfoundland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nova Scotia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Osh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pleven&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Qom&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rivne&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Santa Cruz&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Shanxi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Souss-Massa-Draâ&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sumatera Barat&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Taza-Al Hoceima-Taounate&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Trentino-Alto Adige&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Veneto&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Zagrebacka&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Al Gharbiyah&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Andijan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Artemisa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Baden-Württemberg&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Batna&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bistrita-Nasaud&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burgas&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Castile-La Mancha&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Chinandega&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cuscatlán&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Donetsk&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Federal District&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gilan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guelmim-Es Semara&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hesse&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Iasi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jawa Barat&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kandahar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Laghouat&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lori&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Manabi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Masaya&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Michoacán&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Murcia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nord-Pas-de-Calais&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Northern Mindanao&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oran&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pichincha&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Qashqadaryo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rio de Janeiro&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;San Luis Potosí&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sevastopol&apos;&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sofala&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Taranaki&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tokyo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vallee Du Bandama&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Waikato&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Yogyakarta&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Acre&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Alibori&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Arad&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Atlántico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bangui&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Berlin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brest&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Canelones&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chelyabinsk&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cochabamba&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Escuintla&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Galati&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Haryana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hrodna&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ishikawa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kabul&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kerala&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kuala Lumpur&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Limburg&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Madhya Pradesh&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Maramures&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mecklenburg-Vorpommern&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Moravian-Silesian&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nariño&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Oaxaca&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pays de la Loire&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Potosí&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rajasthan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saint Catherine&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Savanes&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sidi Bel Abbes&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Splitsko-Dalmatinska&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tabuk&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Thuringia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Upper Normandy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;West Bengal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Woqooyi Galbeed&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Zürich&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Viet Nam&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Orders' id='Orders_E7311EAEDDDA4BD2B93A623207105EB8'>
            <properties context=''>
              <relation connection='excel-direct.0r9jauf0j241hl1e42qpr0mst76p' name='Orders' table='[Orders$]' type='table'>
                <columns gridOrigin='A1:X10001:no:A1:X10001:0' header='yes' outcome='6'>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='date' date-parse-format='dd-MM-yyyy' name='Order Date' ordinal='2' />
                  <column datatype='string' name='Ship Date' ordinal='3' />
                  <column datatype='string' name='Ship Mode' ordinal='4' />
                  <column datatype='string' name='Customer ID' ordinal='5' />
                  <column datatype='string' name='Customer Name' ordinal='6' />
                  <column datatype='string' name='Segment' ordinal='7' />
                  <column datatype='string' name='City' ordinal='8' />
                  <column datatype='string' name='State' ordinal='9' />
                  <column datatype='string' name='Country' ordinal='10' />
                  <column datatype='integer' name='Postal Code' ordinal='11' />
                  <column datatype='string' name='Market' ordinal='12' />
                  <column datatype='string' name='Region' ordinal='13' />
                  <column datatype='string' name='Product ID' ordinal='14' />
                  <column datatype='string' name='Category' ordinal='15' />
                  <column datatype='string' name='Sub-Category' ordinal='16' />
                  <column datatype='string' name='Product Name' ordinal='17' />
                  <column datatype='real' name='Sales' ordinal='18' />
                  <column datatype='integer' name='Quantity' ordinal='19' />
                  <column datatype='real' name='Discount' ordinal='20' />
                  <column datatype='real' name='Profit' ordinal='21' />
                  <column datatype='real' name='Shipping Cost' ordinal='22' />
                  <column datatype='string' name='Order Priority' ordinal='23' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_0E5F052E939549EFB8B04643A23EA723]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Sales In USA' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Profits in USA'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#e15759' fontname='Tableau Bold' fontsize='22'>Profits in USA</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (9GScrAa0RCarDNRf-oUe0g_452298fa013a423f82d683d99d8386e1_Worksheet (1))' name='federated.0273vjy077wwfe1aduopb1trq1ys' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0273vjy077wwfe1aduopb1trq1ys'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='real' name='[Shipping Cost]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Shipping Cost]' derivation='Sum' name='[sum:Shipping Cost:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0273vjy077wwfe1aduopb1trq1ys].[Action (Country,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_0E5F052E939549EFB8B04643A23EA723]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0273vjy077wwfe1aduopb1trq1ys].[none:Country:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:Country:nk]' member='&quot;United States&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0273vjy077wwfe1aduopb1trq1ys].[sum:Profit:qk]' included-values='in-range'>
            <min>0.0</min>
          </filter>
          <slices>
            <column>[federated.0273vjy077wwfe1aduopb1trq1ys].[none:Country:nk]</column>
            <column>[federated.0273vjy077wwfe1aduopb1trq1ys].[sum:Profit:qk]</column>
            <column>[federated.0273vjy077wwfe1aduopb1trq1ys].[Action (Country,State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='798' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.0273vjy077wwfe1aduopb1trq1ys].[sum:Profit:qk]' />
              <color column='[federated.0273vjy077wwfe1aduopb1trq1ys].[none:State:nk]' />
              <text column='[federated.0273vjy077wwfe1aduopb1trq1ys].[none:State:nk]' />
              <text column='[federated.0273vjy077wwfe1aduopb1trq1ys].[sum:Profit:qk]' />
              <lod column='[federated.0273vjy077wwfe1aduopb1trq1ys].[sum:Shipping Cost:qk]' />
              <lod column='[federated.0273vjy077wwfe1aduopb1trq1ys].[sum:Quantity:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{64C159B9-A17E-43DB-9703-D0E2378089C2}' />
    </worksheet>
    <worksheet name='Sales In USA'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#e15759' fontname='Tableau Bold' fontsize='22'>Sales In USA</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (9GScrAa0RCarDNRf-oUe0g_452298fa013a423f82d683d99d8386e1_Worksheet (1))' name='federated.0273vjy077wwfe1aduopb1trq1ys' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0273vjy077wwfe1aduopb1trq1ys'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0273vjy077wwfe1aduopb1trq1ys].[none:Country:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:Country:nk]' member='&quot;United States&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0273vjy077wwfe1aduopb1trq1ys].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0273vjy077wwfe1aduopb1trq1ys].[Latitude (generated)]' field-type='quantitative' max='8831391.4588963743' min='4261368.1577010527' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.0273vjy077wwfe1aduopb1trq1ys].[Longitude (generated)]' field-type='quantitative' max='-5446241.661490174' min='-19030914.67188691' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0273vjy077wwfe1aduopb1trq1ys].[sum:Sales:qk]' palette='sunrise_sunset_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0273vjy077wwfe1aduopb1trq1ys].[sum:Sales:qk]' />
              <lod column='[federated.0273vjy077wwfe1aduopb1trq1ys].[none:Country:nk]' />
              <lod column='[federated.0273vjy077wwfe1aduopb1trq1ys].[none:State:nk]' />
              <text column='[federated.0273vjy077wwfe1aduopb1trq1ys].[sum:Sales:qk]' />
              <geometry column='[federated.0273vjy077wwfe1aduopb1trq1ys].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0273vjy077wwfe1aduopb1trq1ys].[Latitude (generated)]</rows>
        <cols>[federated.0273vjy077wwfe1aduopb1trq1ys].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{03057A67-D8BD-447B-A4F5-3D61A44505E2}' />
    </worksheet>
    <worksheet name='Sales Trend In USA'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#e15759' fontname='Tableau Bold' fontsize='22'>Sales Trend In USA</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (9GScrAa0RCarDNRf-oUe0g_452298fa013a423f82d683d99d8386e1_Worksheet (1))' name='federated.0273vjy077wwfe1aduopb1trq1ys' />
          </datasources>
          <datasource-dependencies datasource='federated.0273vjy077wwfe1aduopb1trq1ys'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0273vjy077wwfe1aduopb1trq1ys].[Action (Country,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_0E5F052E939549EFB8B04643A23EA723]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0273vjy077wwfe1aduopb1trq1ys].[none:Country:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:Country:nk]' member='&quot;United States&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0273vjy077wwfe1aduopb1trq1ys].[sum:Sales:qk]' included-values='in-range'>
            <min>40000.0</min>
          </filter>
          <slices>
            <column>[federated.0273vjy077wwfe1aduopb1trq1ys].[none:Country:nk]</column>
            <column>[federated.0273vjy077wwfe1aduopb1trq1ys].[sum:Sales:qk]</column>
            <column>[federated.0273vjy077wwfe1aduopb1trq1ys].[Action (Country,State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0273vjy077wwfe1aduopb1trq1ys].[sum:Sales:qk]' palette='orange_blue_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0273vjy077wwfe1aduopb1trq1ys].[sum:Sales:qk]' />
              <lod column='[federated.0273vjy077wwfe1aduopb1trq1ys].[none:State:nk]' />
              <text column='[federated.0273vjy077wwfe1aduopb1trq1ys].[sum:Sales:qk]' />
              <color column='[federated.0273vjy077wwfe1aduopb1trq1ys].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0273vjy077wwfe1aduopb1trq1ys].[sum:Sales:qk]</rows>
        <cols>[federated.0273vjy077wwfe1aduopb1trq1ys].[yr:Order Date:ok]</cols>
      </table>
      <simple-id uuid='{41C5C228-6E07-4838-927A-99C42264506B}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='15' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='12' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
              <zone h='98000' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone h='98000' id='5' type-v2='layout-basic' w='98400' x='800' y='1000'>
                  <zone h='49000' id='3' name='Sales In USA' w='98400' x='800' y='1000'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='49000' id='9' name='Profits in USA' w='49200' x='800' y='50000'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='49000' id='13' name='Sales Trend In USA' w='49200' x='50000' y='50000'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='900' minheight='900' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='27' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='26' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='Sales In USA' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='9' is-fixed='true' name='Profits in USA' w='49200' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='13' is-fixed='true' name='Sales Trend In USA' w='49200' x='50000' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{F594AD46-1590-4051-B8A3-92ECAB82B97C}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Sales In USA'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0273vjy077wwfe1aduopb1trq1ys].[sum:Sales:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0273vjy077wwfe1aduopb1trq1ys].[none:Country:nk]</field>
            <field>[federated.0273vjy077wwfe1aduopb1trq1ys].[none:State:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{C313DC91-E0A1-4BCD-A586-1A6280D20077}' />
    </window>
    <window class='worksheet' name='Profits in USA'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0273vjy077wwfe1aduopb1trq1ys].[none:State:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0273vjy077wwfe1aduopb1trq1ys].[none:Country:nk]</field>
            <field>[federated.0273vjy077wwfe1aduopb1trq1ys].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A6841BF0-6102-489D-AD9A-77D21EDE1ACD}' />
    </window>
    <window class='worksheet' name='Sales Trend In USA'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0273vjy077wwfe1aduopb1trq1ys].[sum:Sales:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0273vjy077wwfe1aduopb1trq1ys].[none:Country:nk]</field>
            <field>[federated.0273vjy077wwfe1aduopb1trq1ys].[none:State:nk]</field>
            <field>[federated.0273vjy077wwfe1aduopb1trq1ys].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CA0DDB85-5193-4118-BE34-CDD5F1DFEBF6}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Profits in USA' />
        <viewpoint name='Sales In USA'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='2' />
        </viewpoint>
        <viewpoint name='Sales Trend In USA'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{0CC79F0A-7F44-449C-A6E9-124F7ACB9118}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Profits in USA' width='192'>
      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
      JAYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sales In USA' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sales Trend In USA' width='192'>
      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
      arUC8P8BKDAOBV9odHYAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
